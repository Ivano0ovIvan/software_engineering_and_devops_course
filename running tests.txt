1. make new directory in the project called 'tests'
2. inside create new file '{name of the app}.test.js'
3. open new terminal => npm install -D @playwright/test
4.write some tests:

const {test, expect} = require('@playwright/test')

test('user can add a task', async ({page}) => {
    await page.goto('http://localhost:5500/');
    await page.fill('#task-input', 'Test Task');
    await page.click('#add-task');

    const taskText = await page.textContent('.task');
    expect(taskText).toContain('Test Task');
});

test('user can delete a task', async ({page}) => {
    await page.goto('http://localhost:5500/');
    await page.fill('#task-input', 'Test Task');
    await page.click('#add-task');
    await page.click('.task .delete-task');

    const tasks = await page.$$eval('.task', tasks => tasks.map(task => task.textContent));
    expect(tasks).not.toContain('Test Task');
});

test('user can mark a task as complete', async ({page}) => {
    await page.goto('http://localhost:5500/');
    await page.fill('#task-input', 'Test Task');
    await page.click('#add-task');
    await page.click('.task .task-complete');

    const completerTask = await page.$('.task.completed');
    expect(completerTask).not.toBeNull();
});

test('user can filter tasks', async ({page}) => {
    await page.goto('http://localhost:5500/');
    await page.fill('#task-input', 'Test Task');
    await page.click('#add-task');
    await page.click('.task .task-complete');
    await page.selectOption('#filter', 'Completed');

    const incompleteTask = await page.$('.task:not(.completed)');
    expect(incompleteTask).toBeNull();
});

5. in the terminal => npx playwright test

--------------------------------------------------------
const {test, expect} = require('@playwright/test');

const baseURL = 'http://localhost:3000'

test('Verify All Books link is visible after user is logged in', async ({page}) => {
    await page.goto(baseURL);                     -> open localhost:3000
    await page.waitForSelector('nav.navbar');     -> go to navigation bar
    await page.click("a.button:nth-child(1)");    -> click on the login button (right click on the button/inspect/copy/copy CSS selector)
    await page.fill('#email', 'peter@abv.bg');	  -> in the field with id "email" input the email
    await page.fill('#password', '123456');	  -> input the password
    await page.click('input.button');		  -> click the button

    const allBooksLink = await page.$(".navbar-dashboard > a"); -> 
    const isAllBooksLinkVisible = await allBooksLink.isVisible();
    expect(isAllBooksLinkVisible).toBe(true);
});